services:
  postgres:
    image: postgres:17.2
    container_name: worldchat-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped

  redis:
    image: redis:7.4-alpine
    container_name: worldchat-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
      - ./logs/redis:/var/log/redis
    command: [ "sh", "-c", "redis-server /usr/local/etc/redis/redis.conf" ]
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: worldchat-backend
    ports:
      - "3000:3000"
    environment:
      DB_HOST: ${DB_HOST}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      FRONTEND_URL: ${FRONTEND_URL}
      REDIS_HOST: ${REDIS_HOST}
    volumes:
      - ./backend:/app
      - backend_node_modules:/app/node_modules
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    command: sh -c "sleep 10 && npm start"

  frontend:
    build:
      context: ./frontend/world-chat
      dockerfile: Dockerfile
    container_name: worldchat-frontend
    ports:
      - "4200:4200"
    volumes:
      - ./frontend/world-chat:/app
      - frontend_node_modules:/app/node_modules
      - frontend_angular_cache:/app/.angular/cache
    environment:
      - NODE_OPTIONS=--max-old-space-size=8192
    depends_on:
      - backend
    restart: unless-stopped

  nginx:
    image: nginx:latest
    container_name: worldchat-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - backend
    restart: unless-stopped

volumes:
  postgres_data:
    name: worldchat_data
  redis-data:
    name: worldchat_redis_data
  backend_node_modules:
  frontend_node_modules:
  frontend_angular_cache: